package com.myspace.ruleselection;

import org.kie.api.runtime.KieSession;
import org.kie.api.runtime.StatelessKieSession;
import org.kie.api.runtime.process.WorkItem;
import org.kie.api.runtime.process.WorkItemHandler;
import org.kie.api.runtime.process.WorkItemManager;
import org.kie.api.command.Command;
import org.kie.api.command.KieCommands;
import org.kie.api.KieServices;
import java.util.Arrays

/**
 * This class was automatically generated by the data modeler tool.
 */

public class TaxonomyWorkItemHandler implements WorkItemHandler ,java.io.Serializable {

    static final long serialVersionUID = 1L;
    
    //private KieSession ksession;
    private StatelessKieSession ksession;
    
    public TaxonomyWorkItemHandler() {
    }
    
    public TaxonomyWorkItemHandler(StatelessKieSession ksession) {
        this.ksession = ksession;
    }

    public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {
		
		String  taxonomy = (String) workItem.getParameter("Taxonomy");
		String  taxonomyValue = (String) workItem.getParameter("value");
		
		ksession.setGlobal("Taxonomy", taxonomy);
		ksession.setGlobal("TaxonomyValue", taxonomyValue);
		KieCommands commandsFactory = KieServices.Factory.get().getCommands();
		Command<?> fireAllRules = commandsFactory.newFireAllRules();
		
		 Command<?> batchCommand =
		 commandsFactory.newBatchExecution(Arrays.asList(fireAllRules));
		//ksession.fireAllRules();
		   
	    manager.completeWorkItem(workItem.getId(), null);

	}

	public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {
		// TODO Auto-generated method stub

	}


}